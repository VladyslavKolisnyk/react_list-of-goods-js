{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_PARAM_ALPHABET","SORT_PARAM_LENGTH","App","useState","sortParam","setSortParam","isReversed","setIsReversed","visibleGoods","goods","preparedGoods","sort","goodA","goodB","localeCompare","length","reverse","getPreparedGood","className","type","onClick","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,WACtBC,EAAoB,SAyBnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA1BR,SAAyBC,EAAzB,GAA4D,IAA1BL,EAAyB,EAAzBA,UAAWE,EAAc,EAAdA,WACrCI,EAAa,YAAOD,GAmB1B,OAjBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAC7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAKXT,GACFI,EAAcM,UAGTN,EAMcO,CACnBlB,EACA,CACEK,YACAE,eAQJ,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMf,EAAaL,IAC5BkB,UAAWG,IAAG,SAAU,UAAW,CACjC,WAAYjB,IAAcJ,IAJ9B,iCAUA,wBACEmB,KAAK,SACLC,QAAS,kBAAMf,EAAaJ,IAC5BiB,UAAWG,IAAG,SAAU,aAAc,CACpC,WAAYjB,IAAcH,IAJ9B,4BAUA,wBACEkB,KAAK,SACLC,QAAS,kBAAMb,GAAeD,IAC9BY,UAAWG,IAAG,SAAU,aAAc,CACpC,YAAaf,IAJjB,sBAUEF,GAAaE,IACb,wBACEa,KAAK,SACLC,QAzCI,WACZf,EAAa,IACbE,GAAc,IAwCNW,UAAU,4BAHZ,sBAUJ,6BACGV,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCtGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.311ba3ce.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_PARAM_ALPHABET = 'alphabet';\nconst SORT_PARAM_LENGTH = 'length';\n\nfunction getPreparedGood(goods, { sortParam, isReversed }) {\n  const preparedGoods = [...goods];\n\n  if (sortParam) {\n    preparedGoods.sort((goodA, goodB) => {\n      switch (sortParam) {\n        case SORT_PARAM_ALPHABET:\n          return goodA.localeCompare(goodB);\n        case SORT_PARAM_LENGTH:\n          return goodA.length - goodB.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortParam, setSortParam] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods = getPreparedGood(\n    goodsFromServer,\n    {\n      sortParam,\n      isReversed,\n    },\n  );\n  const reset = () => {\n    setSortParam('');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortParam(SORT_PARAM_ALPHABET)}\n          className={cn('button', 'is-info', {\n            'is-light': sortParam !== SORT_PARAM_ALPHABET,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortParam(SORT_PARAM_LENGTH)}\n          className={cn('button', 'is-success', {\n            'is-light': sortParam !== SORT_PARAM_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setIsReversed(!isReversed)}\n          className={cn('button', 'is-warning', {\n            'is-light': !isReversed,\n          })}\n        >\n          Reverse\n        </button>\n\n        {(sortParam || isReversed) && (\n          <button\n            type=\"button\"\n            onClick={reset}\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}